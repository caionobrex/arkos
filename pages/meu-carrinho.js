import Head from 'next/head'
import Header from '../components/header'
import Container from '../components/container'
import Image from 'next/image'
import Link from 'next/link'
import {
  AiOutlineSearch,
  AiFillStar,
  AiOutlineStar,
  AiOutlinePlus,
  AiOutlineMinus
} from 'react-icons/ai'
import { useCart } from '../context/cartContext'
import { useRouter } from 'next/router'
import { useUser } from '../context/userContext'
import swal from 'sweetalert'

const CartItem = ({ item, updateQty, removeItem }) => {
  const increaseQty = () => updateQty(item, ++item.qty)
  const decreaseQty = () => updateQty(item, --item.qty)
  
  return (
    <div className="relative flex flex-col gap-y-4 items-center gap-x-6 md:flex-row">
    
      <div className="h-60 w-full md:w-40 md:h-40 bg-blue-200 rounded-2xl">
        <img src={item.image} className="w-full h-full object-cover rounded-t-2xl md:rounded-t-none md:rounded-l-2xl" />
      </div>
      
      <div className="flex flex-col gap-y-2 p-3 mb-5 md:p-0 md:w-96">
        <div className="flex items-center gap-x-2">
          <h1 className="font-medium text-2xl">{item.title} <span className="text-gray-500">({item.qty})</span></h1>
          <div className="flex items-center gap-x-2">
            <AiOutlinePlus className="text-2xl text-primary cursor-pointer" onClick={increaseQty} />
            {item.qty > 1 && <AiOutlineMinus className="text-2xl text-red-500 cursor-pointer" onClick={decreaseQty} />}
          </div>
        </div>
        <ul className="flex items-center gap-x-1">
          <li><AiFillStar className="text-yellow-300" /></li>
          <li><AiFillStar className="text-yellow-300" /></li>
          <li><AiFillStar className="text-yellow-300" /></li>
          <li><AiFillStar className="text-yellow-300" /></li>
          <li><AiFillStar className="text-yellow-300" /></li>
          <li className="text-gray-300 ml-2">({item.rating.count})</li>
        </ul>
        <p>{item.description}</p>
      </div>
      
      <div className="absolute flex justify-center items-center top-0 right-0 bg-red-400 rounded-full w-10 h-10 cursor-pointer" onClick={() => removeItem(item)}>
        <Image src="/imgs/trash.svg" width="25" height="25" />
      </div>
      
      <div className="absolute flex justify-center items-center bottom-2 right-2 cursor-pointer text-primary font-medium text-2xl">
        R$ {(item.qty * item.price).toFixed(2)}
      </div>
    </div>
  )
}

export default function MyCart() {
  const router = useRouter()
  const { user } = useUser()
  const { items, setItems, total, updateQty, removeItem } = useCart()
  
  const onClickHandler = () => {
    if (!user) return router.push('/login?redirect=/meu-carrinho')
    swal('Parabéns!! Sua Compra foi feita com successo.', 'Nosso muito obrigado por comprar na Arkos Food =)', 'success')
    .then(() => {
      setItems([])
      router.push('/produtos')
    })
  }
  
  return (
    <>
      <Head>
        <title>Meu Carrinho</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <Header />
      
      <main className="pb-8">
        <Container>
          <div className="pt-6 md:pt-3">
            <Link href="/produtos"><a href="/produtos" className="text-red-500 transition-all hover:text-red-300">Pagina Inicial</a></Link> > <span>Meu Carrinho</span>
          </div>
          
          {items.length == 0 && (
            <div className="flex flex-col justify-center gap-y-3 items-center mt-12 font-medium text-2xl">
              Seu carrinho está vazio &#128532;
            </div>
          )}
          
          <ul className="flex flex-col gap-y-4 my-4">
            {items.map((item) => (
              <li key={item.id} className="border-2 rounded-2xl">
                <CartItem
                  item={item}
                  updateQty={updateQty}
                  removeItem={removeItem}
                />
              </li>
            ))}
          </ul>
          
          {items.length > 0 && (
            <div className="flex md:justify-end mt-8">
              <div className="flex flex-col gap-y-3 w-full md:w-auto">
                <div className="flex items-center gap-x-3 md:gap-x-10 text-xl font-medium">
                  <span>TOTAL:</span>
                  <span>R$ {total.toFixed(2)}</span>
                </div>
                <button
                  disabled={items.length == 0}
                  className="bg-primary px-4 py-2 rounded-lg font-medium text-white w-full border-2 border-primary hover:bg-transparent hover:text-gray-700 disabled:opacity-30"
                  onClick={onClickHandler}
                >
                  Comprar
                </button>
              </div>
            </div>
          )}
        </Container>
      </main>
    </>
  )
}